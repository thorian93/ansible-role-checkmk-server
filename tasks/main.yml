---
- name: "Preflight - Fail if target host is not stable for this Role."
  ansible.builtin.fail:
    msg: "This role is not stable for the target operating system, {{ ansible_distribution }} {{ ansible_distribution_major_version }}."
  when: (ansible_distribution is not defined) or
        (ansible_distribution_version is not defined) or
        (ansible_distribution+" "+ansible_distribution_major_version not in checkmk_server_stable_os)

- name: "Include OS Family specific Variables."
  include_vars: "{{ ansible_os_family }}.yml"

- name: "Download Checkmk Server Setup."
  ansible.builtin.get_url:
    url: "{{ checkmk_download_url }}"
    dest: "/tmp/{{ checkmk_setup_file }}"

- name: "Install Checkmk Prerequisites."
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ checkmk_prerequisites}}"

- name: Include OS Family specific Playbook.
  ansible.builtin.include_tasks: "{{ ansible_os_family }}.yml"

- name: "Create Sites."
  ansible.builtin.shell: "omd create {{ item.name }}"
  args:
    creates: "/omd/sites/{{ item.name }}"
  no_log: 'true'
  loop: "{{ checkmk_sites }}"
  when: item.state != "absent"
  register: checkmk_sites_created

- name: "Start Sites."
  ansible.builtin.shell: "omd start {{ item.name }}"
  args:
    creates: "/opt/omd/sites/{{ item.name }}/tmp/run/live"
  no_log: 'true'
  loop: "{{ checkmk_sites }}"
  when: item.state == "started"
  register: checkmk_sites_started

- name: "Stop Sites."
  ansible.builtin.shell: "omd stop {{ item.name }}"
  args:
    removes: "/opt/omd/sites/{{ item.name }}/tmp/run/live"
  no_log: 'true'
  loop: "{{ checkmk_sites }}"
  when: (item.state == "absent") or (item.state == "stopped")
  register: checkmk_sites_stopped

- name: "Destroy Sites."
  ansible.builtin.shell: "yes yes | omd rm {{ item.name }}"
  args:
    removes: "/omd/sites/{{ item.name }}"
  no_log: 'true'
  loop: "{{ checkmk_sites }}"
  when: item.state == "absent"
  register: checkmk_sites_removed

- name: "Update Site Admin Password."
  ansible.builtin.shell: "echo '{{ item.admin_pw }}' | htpasswd -i /omd/sites/{{ item.name }}/etc/htpasswd cmkadmin"
  no_log: 'true'
  loop: "{{ checkmk_sites }}"
  when: item.state != "absent"
